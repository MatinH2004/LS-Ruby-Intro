### Array notes + methods
-----------------------

# find the first element of array:
array = [1, 2, 3]
array.first
=> 1

# find the last element of array:
array.last
=> 3

# find item in array:
array[index_number]
=> array[1] = 2

# remove last item of array
array.pop
=> [1, 2]

# add item to array
array.push(4)
=> [1, 2, 3, 4]

# do something to every element in array
array.map { |num| num ** 2}
=> [1, 4, 9]
note: can also use .collect method (alias for .map)
note: use .map! to modify original array

# delete an item from array
array.delete_at(2)
=> [1, 2]

# deletes all instances of the provided value from the array
array.deletes('cat')
=> deletes all 'cat' elements from array (mutates)

# deletes any duplicate values that exist, returns the result as a new array
[1, 2, 2, 2, 3, 4, 5].uniq
=> [1, 2, 3, 4, 5]
to modify original array use: uniq!

# This method iterates over an array and returns a new array that includes any items that return true to the expression provided
array.select { |num| num > 1}
=> [2, 3]

# insert value to the beginning of array (index = 0)
array.unshift(0)
=> [0, 1, 2, 3]

## Common array methods

array = [1, 2, 3]

# .include?
array.include?(3)
=> true

# .flatten (not destructive)
[1, 2, [3, 4, 5], [6, 7]].flatten
=> [1, 2, 3, 4, 5, 6, 7]

# .each_index (not destructive)
array.each_index { |i| puts "This is index #{i}"}
=> This is index 0
   This is index 1
   This is index 2

# .each_with_index
array.each_with_index { |val, idx| puts "#{idx+1}. #{val}" }
=>
1. 1
2. 2
3. 3

# .sort, .sort!
a = [5, 3, 8, 2, 4, 1]
a.sort
=> [1, 2, 3, 4, 5, 8] # new array

# .product ()
[1, 2, 3].product([4, 5])
=> [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]